/*!
 * UI development toolkit for HTML5 (OpenUI5)
 * (c) Copyright 2009-2016 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
/* =========================== */
/* Global CSS for 'base' theme */
/* =========================== */
/* =========================== */
/* Semantic Theming Mapping    */
/* =========================== */
/* ---------------------------------------------------------------------------------------- */
/* TMP during LESS convertion ---- to be deleted */
/* may be required by SubstitutionRulesManager.css in inbox lib */
/* ---------------------------------------------------------------------------------------- */
/**
  * This parameter is used in the Shell control to calculate the size when it grows.
  * !!! ONLY PX-VALUES ARE ALLOWED HERE.
  */
/**
  * This parameter is used in the Shell control to calculate the size of the margin when showing
  * an overflow button in the right pane. As of 1.18.0 this value contains the _maximum_ height
  * of the overflow button, if the text inside the button is smaller, the button shrinks with it.
  * !!! ONLY PX-VALUES ARE ALLOWED HERE.
  */
/* Approved by UX to use a hard coded color value for this */
/* NotificationBar */
/* The maximized height will be calculated corresponding to the window's height.*/
/* ToolPopup */
/* Telling the ToolPopup if it's inverted per default */
/* transparent; */
/* Default margins classes to be used by the application for all controls */
/*make tiny margin themable*/
/*make small margin themable*/
/*make medium margin themable*/
/*make large margin themable*/
/*
 * This is a mixin for creating the predefined container content padding
 * classes:
 * sapUiNoContainerContentPadding
 * sapUiContainerContentPadding
 * sapUiResponsiveContainerContentPadding
 * These classes can be set on many UI5 containers and will
 * add padding inside the container's content padding based
 * on the selectors that are arguments for this mixin.
 *
 * Arguments to this function-like mixin are the rootClass selector and
 * the content selector where the padding should be applied.
 */
/*
  * the sapLess-parser has problems with an escaped string as default value for the parameterized mixin
  * therefore we need to temporarily use a parameter assigning the default value
  */
.sapUiDtOverlay {
  position: absolute;
  outline: none;
}
.sapUiDtOverlay:before,
.sapUiDtOverlay:after {
  position: absolute;
  pointer-events: none;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  box-sizing: border-box;
}
.sapUiDtOverlayFocusable:focus:before {
  content: " ";
  border: 2px solid rgba(77, 144, 254, 0.5);
}
.sapUiDtDummyScrollContainer {
  position: absolute;
  top: 0;
  left: 0;
  pointer-events: none;
}
.sapUiDtOverlayTargetZone .sapUiDtOverlaySelected:after {
  content: none;
}
.sapUiDtOverlayTargetZone:after {
  content: " ";
  border: 1px dashed #008000;
}
.sapUiDtOverlaySelected:after {
  content: " ";
  border: 1px solid #3355ff;
}
.sapUiDtOverlayMovable {
  cursor: move;
}
.sapUiDtOverlayCutted {
  background-color: #ffffff !important;
  opacity: 0.5;
}
#overlay-container {
  position: fixed;
}
.sapUiDtDragGhostWrapper {
  position: fixed;
  pointer-events: none;
}
/* fix for chrome */
.sap-desktop[data-sap-ui-browser^="cr"] .sapUiDtDragGhostWrapper {
  padding-left: -500px;
  padding-bottom: 500px;
  bottom: -1000px;
}
.sapUiDtClonedDom {
  position: absolute;
  top: 0;
  left: 0;
  pointer-events: none;
}
.sapUiDtClonedDom * {
  pointer-events: none !important;
}
/* This CSS shares it rules with all other CSS of this library */
